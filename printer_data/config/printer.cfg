# This file contains common pin mappings for the BigTreeTech Octopus.
# To use this config, the firmware should be compiled for the
# STM32F446 with a "32KiB bootloader" and a "12MHz crystal" clock reference.

[include KAMP_Settings.cfg]

[include Sensorless-Homing.cfg]

#[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_35003A00145053424E363620-if00 

[pause_resume]

[display_status]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

#[shaketune]
#result_folder: ~/printer_data/config/ShakeTune_results
##    The folder where the results will be stored. It will be created if it doesn't exist.
#number_of_results_to_keep: 3
##    The number of results to keep in the result_folder. The oldest results will
##    be automatically deleted after each runs.
#keep_raw_csv: False
##    If True, the raw CSV files will be kept in the result_folder alongside the
##    PNG graphs. If False, they will be deleted and only the graphs will be kept.
#show_macros_in_webui: True
##    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
##    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
##    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 4500  
max_z_velocity: 10
max_z_accel: 40
square_corner_velocity: 5.0

[input_shaper]
#shaper_type_x = mzv
#shaper_freq_x = 62.6
#shaper_type_y = mzv
#shaper_freq_y = 44.4


#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[include Accelerometer.cfg]

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 150,150,20

[exclude_object]

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
  M104 S0
  {% else %}
  TURN_OFF_HEATERS
  M84
  {% endif %}

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor MCU]
sensor_type: temperature_mcu
sensor_mcu: mcu
#   The micro-controller to read from. The default is "mcu".
#sensor_temperature1:
#sensor_adc1:
#   Specify the above two parameters (a temperature in Celsius and an
#   ADC value as a float between 0.0 and 1.0) to calibrate the
#   micro-controller temperature. This may improve the reported
#   temperature accuracy on some chips. A typical way to obtain this
#   calibration information is to completely remove power from the
#   printer for a few hours (to ensure it is at the ambient
#   temperature), then power it up and use the QUERY_ADC command to
#   obtain an ADC measurement. Use some other temperature sensor on
#   the printer to find the corresponding ambient temperature. The
#   default is to use the factory calibration data on the
#   micro-controller (if applicable) or the nominal values from the
#   micro-controller specification.

#####################################################################
# Driver Definitions 
#####################################################################
 
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 1.096
#hold_current: 0.300
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
driver_TBL: 1
driver_TOFF: 4
driver_HEND: 3
driver_HSTRT: 0
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
driver_SGTHRS: 100
diag_pin: PG6
sense_resistor: 0.110
 
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 1.096
#hold_current: 0.300
driver_TBL: 1
driver_TOFF: 4
driver_HEND: 3
driver_HSTRT: 0
driver_SGTHRS: 120
diag_pin: PG9
sense_resistor: 0.110
 
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 1.096
hold_current: 0.300
driver_TBL: 1
driver_TOFF: 4
driver_HEND: 3
driver_HSTRT: 0
sense_resistor: 0.110

[tmc2209 extruder]
uart_pin: PF2
interpolate: False
run_current: 0.650
#hold_current: 0.300
sense_resistor: 0.110


#####################################################################
# Stepper  Definitions 
#####################################################################

# Driver0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
#step_distance: .005
rotation_distance: 32
full_steps_per_rotation: 400
microsteps: 64
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: -8
position_min: -8
position_max: 315.5
homing_speed: 30
homing_retract_dist: 0
 
# Driver1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
#step_distance: .005
rotation_distance: 32
full_steps_per_rotation: 400
microsteps: 64
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -12
position_min:-12
position_max: 312
homing_speed: 40
homing_retract_dist: 0
 
#Driver2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
#step_distance: .00125
rotation_distance: 8
full_steps_per_rotation: 400
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 350
homing_speed: 15

# Driver3
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
#[stepper_]
#step_pin: PG4
#dir_pin: PC1
#enable_pin: PA0
#endstop_pin: PG11
#...

# Driver4
[extruder]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
#step_distance: 0.00232
rotation_distance: 22.163
microsteps: 64
gear_ratio: 50:17
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA2 # HE0
sensor_type: Generic 3950
sensor_pin: PF4 # T0
min_extrude_temp: 0
max_extrude_only_distance: 400
max_extrude_cross_section: 5
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 320
pressure_advance_smooth_time: 0.020


[verify_heater extruder]
max_error: 150
hysteresis: 10


#####################################################################
# Fans
#####################################################################
[heater_fan hotend_fan]
pin: PE5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[fan]
pin: PD13
kick_start_time: 0.5
cycle_time: 0.010 


[output_pin stepper_coolers]
pin: PD12
value: 0

##REFERENCE##
#[fan]
#pin: PA8

#[heater_fan fan1]
#pin: PE5

#[heater_fan fan2]
#pin: PD12

#[heater_fan fan3]
#pin: PD13

#[heater_fan fan4]
#pin: PD14

#[controller_fan fan5]
#pin: PD15

#####################################################################
# Bed
#####################################################################
[heater_bed]
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF3 # TB
min_temp: 0
max_temp: 130
#control: pid
#pid_Kp: 50.07
#pid_Ki: 5.74
#pid_Kd: 291.36
 
#####################################################################
# BL Touch
#####################################################################
 
[bltouch]
sensor_pin: PB7
control_pin: PB6
pin_move_time: 0.680
stow_on_each_sample: True
probe_with_touch_mode: false
x_offset:-23.5
y_offset:4
#z_offset = 3
speed:20
samples:1
#ample_retract_dist:6
 
[bed_mesh]
speed: 150
horizontal_move_z: 5
probe_count: 6,6
fade_start: 1
fade_end: 10
split_delta_z: .025
move_check_distance: 5
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
#relative_reference_index: 12
mesh_min: 5,5
mesh_max: 295,300
adaptive_margin: 5

 
#[safe_z_home]
#home_xy_position: 173.5,146 # Change coordinates to the center of your print bed
#speed: 40
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 3


[filament_motion_sensor btt_smartie]
pause_on_runout: True
detection_length: 200.0
extruder: extruder
switch_pin: ^PG15
runout_gcode:
  M600

# [homing_override]
# set_position_z: 0
# Gcode:
#  {% set HOME_CUR = 0.400 %}
#  {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
#  {% set RUN_CUR = driver_config.run_current %}
#  ;{% set HOLD_CUR = driver_config.hold_current %}
#  G0 Z10
#  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} ;HOLDCURRENT={HOME_CUR}
#  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} ;HOLDCURRENT={HOME_CUR}
#  G28 X0
#  G28 Y0
#  G0 X150 Y150 f10000
#  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} ;HOLDCURRENT={HOLD_CUR}
#  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} ;HOLDCURRENT={HOLD_CUR}
#  G28 Z0
#  G0 Z10

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    G0 Z10 F600
    # M84
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    {% if home_all or 'X' in params %}
      _HOME_X
    {% endif %}
  
    {% if home_all or 'Y' in params %}
      _HOME_Y
    {% endif %}
    
    {% if home_all or 'Z' in params %}
      G90
      G1 X173.5 Y146 F6000
      G28 Z
      G1 Z10 F300
    {% endif %}

[gcode_macro _HOME_Y]
gcode:
    {% set HOME_CUR = 0.400 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y
    # Move away
    G90
    G1 Y5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    
[gcode_macro _HOME_X]
gcode:
    {% set HOME_CUR = 0.400 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

#####################################################################
# macros
#####################################################################
[gcode_macro PA_CAL]
# Pressure Advance Simple Test macro.
# Usage: PA_CAL BED=100 EXTRUDER=240 PA_START=0.0 PA_STOP=0.1 NZL=0.4
# Or with no parameters, this would execute the same as
# PA_CAL BED=99 EXTRUDER=239 PA_START=0.0 PA_STOP=0.1 NZL=(as per printer.cfg)
# First prints a line with current set PA, then prints 21 additional line segments
# starting with PA_START, and increasing to PA_STOP.
# Based http://realdeuce.github.io/Voron/PA/pressure_advance.html
# Assisted by u/imoftendisgruntled, u/scul86, and thanks to u/beansisfat, u/stray_r

description: Tune Pressure Advance
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED = params.BED|default(99)|float %}
        {% set EXTRUDER = params.EXTRUDER|default(239)|float %}
        {% set PA_START = params.PA_START|default(0.0)|float %}
        {% set PA_STOP = params.PA_STOP|default(0.1)|float %}
        {% set PA_STEP = (PA_STOP - PA_START) / 20 |float %}
        {% set NZL_CFG = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}
        {% set NZL = params.NZL|default(NZL_CFG)|float %}
        {% set E20 = (0.1147475 * NZL) * 20|float %}
        {% set E40 = (0.1147475 * NZL) * 40|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}

        PRINT_START BED={BED} EXTRUDER={EXTRUDER}
		
        G21 ; Millimeter units
        G90 ; Absolute XYZ
        M83 ; Relative E
        SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
        G92 E0
        M106 S0 
		
        G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000          ; move to start position
        G1 Z0.25 F300                                  ; move to layer height
        G1 E0.75 F1800                                 ; un-retract
        G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300     ; print line part one
        G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F9000    ; print line part two
        G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300     ; print line part three
        G1 E-0.75 F1800                                ; retract
        G1 Z1 F300                                     ; Move above layer height  
		
        {% for i in range(0, 20) %}
            SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
            M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}, increased PA by {PA_STEP}.
            G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000           ; move to start position
            G1 Z0.25 F300                                         ; move to layer height
            G1 E0.75 F1800                                        ; un-retract
            G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part one
            G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000     ; print line part two
            G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part three
            G1 E-0.75 F1800                                       ; retract
            G1 Z1 F300                                            ; Move above layer height  
        {% endfor %}

        M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
		
        PRINT_END
		
    {% endif %}
[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
  SAVE_GCODE_STATE NAME=SNAPSHOT
  M117 Yeeeeet!
  G91
  G1 E-1.5 F2500
  G1 Z.2 f3000
  G90
  G1 X150 Y150 F3500
  G4 P500 ;dwell
  TIMELAPSE_SNAPSHOT
  G4 P500 ;moar dwelling
  G91
  G1 E1.5 F2500
  RESTORE_GCODE_STATE NAME=SNAPSHOT


[gcode_macro TIMELAPSE_SNAPSHOT]
gcode:
    {action_call_remote_method("timelapse_newframe")}

[respond]
default_prefix: debug:

#[gcode_macro G29]
#gcode:
#        G1 Z7 F600
#        G1 X0 Y0 F6000
#        BED_MESH_CALIBRATE
#        G1 Z7 F6000
#        G1 X0 Y0 F6000

[gcode_macro STEPPER_COOLERS_ON]
gcode:
    set_pin pin=stepper_coolers value=1

[gcode_macro STEPPER_COOLERS_OFF]
gcode:
    set_pin pin=stepper_coolers value=0
 
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# Start GCODE should be for Prusa Slicer or SuperSlicer: print_start EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Start GCODE should be for Cura: print_start EXTRUDER_TEMP=[material_print_temperature] BED_TEMP=[material_bed_temperature]
gcode:
    {% set BED_TEMP = params.BED|default(0)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(0)|int %}
    M117 Heating
    M104 S150                         ; set extruder pre temp
    M140 S{BED_TEMP}                         ; set bed final temp
    M190 S{BED_TEMP}                         ; wait for bed final temp
    STEPPER_COOLERS_ON
    M117 Homing...                 ; display message
    G28 Y0 X0 Z0
    BED_MESH_CALIBRATE PROFILE=default METHOD=automatic ADAPTIVE=1 
    M104 S{EXTRUDER_TEMP}                         ; set extruder final temp
    M109 S{EXTRUDER_TEMP}                         ; wait for extruder final temp
    G4 S2; wait for heaters to recover
    G92 E0;
    G90
    M117 SK-Go Printing                 ; move nozzle away from bed

[gcode_macro PRINT_START_PRESSUREADVANCE]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# Start GCODE should be for Prusa Slicer or SuperSlicer: print_start EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Start GCODE should be for Cura: print_start EXTRUDER_TEMP=[material_print_temperature] BED_TEMP=[material_bed_temperature]
gcode:
    {% set BED_TEMP = params.BED|default(0)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(0)|int %}
    M117 Heating
    M140 S{BED_TEMP}                         ; set bed final temp
    M104 S{EXTRUDER_TEMP}                         ; set extruder final temp
    M190 S{BED_TEMP}                         ; wait for bed final temp
    M109 S{EXTRUDER_TEMP}                         ; wait for extruder final temp
    M117 Homing...                 ; display message
    G28 Y0 X0 Z0
    STEPPER_COOLERS_ON
    BED_MESH_CALIBRATE PROFILE=default METHOD=automatic ADAPTIVE=1
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    G4 S10; wait for heaters to recover
    G92 E0;
    G90
    #G0 X5 Y5 F6000
    #M190 S{BED_TEMP}                         ; wait for bed final temp
    #M109 S{EXTRUDER_TEMP}                         ; wait for extruder final temp
    #M117 Prime line ...
    #G0 Z0.4
    #G91
    #G1 X120 E30 F1200;
    #G1 Y1
    #G1 X-120 E20 F1200;
    #G92 E0;
    #G90
    #G92 E0 ;zero the extruded length again
    #G1 F9000
    M117 End Printing 
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F10000    ; move nozzle to remove stringing
    G1 E-3.0 F3000                ; retract filament
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z30 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X10 Y300 F10000            ; park nozzle at rear
    BED_MESH_CLEAR
    STEPPER_COOLERS_OFF
    M117 Done
    SAVE_IF_SET
    
#   Prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    SAVE_GCODE_STATE NAME=BEFORE_PRIME
    M117 Prime Line
    G1 X10 Y20 Z0.3 F3000 ; get ready to prime
    G92 E0 ; reset extrusion distance
    G1 X10 Y120.0 Z0.3 F1500.0 E20      ;Draw the first 200mm line
    ;G1 X11 Y120.0 Z0.3 F5000.0        ;Move to side a little
    ;G1 X11 Y20 Z0.3 F1500.0 E8       ;Draw the second line
    G92 E0                              ;Reset Extruder
   
    RESTORE_GCODE_STATE NAME=BEFORE_PRIME
 
[gcode_macro LOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E30 F1800                   ; quickly load 30mm filament
  G1 E40 F300                    ; slower extrusion for hotend path
  G1 E10 F150                    ; prime nozzle with filament
  M82                            ; set extruder to absolute

#   Remove Filament (Afterburner)
[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E-100 F1800                 ; retract filament completely
  M82                            ; set extruder to absolute
  
[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z10
    G1 E-100 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  G92 E0                         ; zero the extruder
  G1 E-2.0 F3600                ; retract filament
  G91                            ; relative positioning
  M107                           ; turn off fan
  G1 Z60 F3000                    ; move nozzle up 2mm
  BED_MESH_CLEAR
  STEPPER_COOLERS_OFF
  M117 Done
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[delayed_gcode delay_save]
gcode:
    SAVE_CONFIG

[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
    SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1
     {action_respond_info("SAVE_AT_END is armed")}

[gcode_macro SAVE_IF_SET]
gcode:
    {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
        {action_respond_info("SAVE_AT_END requested save")}
        #_SOUND_YES
        UPDATE_DELAYED_GCODE ID=delay_save DURATION=10
    {% else %}
        #_SOUND_NO
        {action_respond_info("SAVE_AT_END did not request save")}
    {% endif %}

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
########################################################
############# AUTOMATIC BED MESH SELECTOR ##############
########################################################
[gcode_macro LOAD_MESH_TEMP]
#default_parameter_BED_TEMP: 0
#default_parameter_FORCE: 0
variable_force: 0
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0)|int %}
    {% set FORCE = params.FORCE|default(printer["gcode_macro LOAD_MESH_TEMP"].force)|int %}
    { action_respond_info("- AUTOMATED BED MESH GENERATOR -")}
     { action_respond_info("Requested " + BED_TEMP|string)}
    {% if BED_TEMP < 30 %}
        { action_respond_info("Your bed temp is too low, make sure it is at least 30 or higher")}
    {% else %}
        {% if printer.configfile.config["bed_mesh " + BED_TEMP|string ] is defined and FORCE|int == 0 %}
            #CG28 Z #remove line if you ran G28 before starting this macro
            BED_MESH_PROFILE LOAD={BED_TEMP|string}
            { action_respond_info("Succesfully loaded bed_mesh "+ BED_TEMP|string)}
        {% else %}
            {% if printer.configfile.config["bed_mesh " + BED_TEMP|string] is defined and FORCE|int == 1 %}
                BED_MESH_PROFILE REMOVE={BED_TEMP|string}
                SET_GCODE_VARIABLE MACRO=LOAD_MESH_TEMP VARIABLE=force VALUE=0
            {% endif %}
            { action_respond_info("bed_mesh not defined, your bed temperature will go up!")}
            { action_respond_info("We will probe the bed and save the mesh as bed_mesh "+ BED_TEMP|string)}
            ADD_BED_MESH TARGET_TEMP={BED_TEMP}
        {% endif %}
    {% endif %}

[gcode_macro ADD_BED_MESH]
#default_parameter_TARGET_TEMP: 30
gcode:
    {% set TARGET_TEMP = params.TARGET_TEMP|default(30)|int %}
    M190 S{TARGET_TEMP} # Wait for the bed to hit TARGET_TEMP
    #CG28 #remove line if you ran G28 before starting this macro
    #The below runs a home and checks bed is level.
    #SETUP_BED TOL_CORNERS=0.2 TOL_GANTRY=0.02
    M117 Calibrating Bed Mesh at {TARGET_TEMP}c
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE={TARGET_TEMP}
    _SOUND_YES

[gcode_macro FORCE_MESH_REBUILD]
gcode:
    SET_GCODE_VARIABLE MACRO=LOAD_MESH_TEMP VARIABLE=force VALUE=1
    { action_respond_info("The mesh will be rebuit")}
    SAVE_AT_END

[gcode_macro FORCE_MESH_LOAD]
gcode:
    SET_GCODE_VARIABLE MACRO=LOAD_MESH_TEMP VARIABLE=force VALUE=0
    { action_respond_info("The mesh will not be rebuilt unless it does not exist")}
   
 
[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True
 #####################################################################
# Display
#####################################################################
 
[display]
lcd_type: st7920
cs_pin: EXP1_4
sclk_pin: EXP1_5
sid_pin: EXP1_3
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8
 
[output_pin beeper]
pin: EXP1_1
 
 
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 18.604
#*# pid_ki = 0.947
#*# pid_kd = 91.391
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.532
#*# pid_ki = 0.832
#*# pid_kd = 1064.875
#*#
#*# [bltouch]
#*# z_offset = 1.120
#*#
#*# [bed_mesh 80]
#*# version = 1
#*# points =
#*# 	0.096250, 0.075625, 0.061875, 0.005625, -0.029375, -0.042500, -0.073750, -0.067500, -0.033125, -0.008125, 0.021250, 0.038125
#*# 	0.082500, 0.078125, 0.069375, 0.052500, 0.021250, -0.001250, -0.018125, -0.018750, 0.000000, 0.009375, 0.010625, 0.000000
#*# 	0.063750, 0.068750, 0.065625, 0.048750, 0.024375, 0.006250, -0.005625, -0.010000, 0.009375, 0.001250, -0.008750, -0.021250
#*# 	0.055625, 0.081250, 0.085625, 0.077500, 0.047500, 0.034375, 0.015000, 0.009375, 0.025000, 0.021875, -0.003750, -0.015000
#*# 	0.041875, 0.053750, 0.061250, 0.055000, 0.031875, 0.009375, -0.005625, -0.008125, 0.012500, 0.018125, 0.001875, -0.020000
#*# 	0.052500, 0.060625, 0.074375, 0.053125, 0.027500, 0.005000, -0.016250, -0.015625, 0.003125, 0.009375, 0.009375, -0.005000
#*# 	0.069375, 0.078125, 0.085000, 0.071875, 0.046875, 0.026875, 0.017500, 0.016250, 0.034375, 0.043750, 0.033125, 0.028750
#*# 	0.056875, 0.076875, 0.080625, 0.075625, 0.053125, 0.048125, 0.024375, 0.021250, 0.041875, 0.040000, 0.027500, 0.008125
#*# 	0.040625, 0.067500, 0.071250, 0.060625, 0.045000, 0.048125, 0.029375, 0.031875, 0.048125, 0.046875, 0.041250, 0.027500
#*# 	0.040625, 0.049375, 0.061875, 0.041875, 0.026250, 0.025000, 0.011250, 0.012500, 0.028750, 0.032500, 0.040625, 0.032500
#*# 	0.055000, 0.060000, 0.063125, 0.046875, 0.015625, 0.021250, 0.002500, 0.010000, 0.041875, 0.053125, 0.050625, 0.060625
#*# 	0.067500, 0.065625, 0.065000, 0.041875, -0.001250, -0.009375, -0.014375, -0.003125, 0.038750, 0.062500, 0.074375, 0.104375
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = bicubic
#*# y_count = 12
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 12
#*# max_y = 304.97
#*# mesh_x_pps = 2
#*# max_x = 294.96
#*#
#*# [bed_mesh 90]
#*# version = 1
#*# points =
#*# 	-0.003125, 0.015625, 0.023750, -0.008750, -0.047500, -0.046250, -0.043750, -0.024375, 0.021250, 0.015000, 0.032500, 0.073750
#*# 	-0.028750, 0.028125, 0.061875, 0.045625, 0.008125, 0.030625, 0.005625, 0.026250, 0.040625, 0.065625, 0.016875, 0.000000
#*# 	-0.038125, 0.030625, 0.055000, 0.046250, 0.043750, 0.050625, 0.036250, 0.046250, 0.028750, 0.020000, 0.014375, -0.014375
#*# 	-0.073750, 0.029375, 0.028125, 0.084375, 0.029375, 0.045625, 0.001875, 0.039375, 0.043750, 0.001250, -0.006875, -0.033125
#*# 	-0.041875, 0.000625, 0.040625, 0.046250, -0.002500, 0.003125, -0.015625, -0.008750, -0.010625, 0.009375, -0.013125, -0.054375
#*# 	-0.080000, -0.006250, 0.026875, 0.011875, -0.008125, -0.035000, -0.045000, -0.048750, -0.014375, -0.013125, -0.011875, -0.046250
#*# 	-0.059375, 0.016875, 0.025625, 0.028125, -0.003125, -0.011875, -0.026875, -0.020625, -0.003125, 0.016875, -0.004375, -0.052500
#*# 	-0.063750, -0.011875, 0.036875, -0.009375, -0.005625, -0.010000, -0.041875, -0.047500, -0.008750, -0.017500, -0.048125, -0.055625
#*# 	-0.069375, -0.024375, 0.015625, 0.029375, -0.044375, -0.032500, -0.016875, -0.052500, -0.028125, -0.016250, -0.048125, -0.081875
#*# 	-0.075000, -0.025000, -0.006250, -0.004375, -0.023750, -0.044375, -0.043125, -0.090000, -0.054375, -0.055000, -0.056875, -0.065000
#*# 	-0.023750, 0.005000, -0.003750, -0.033750, -0.073750, -0.069375, -0.070625, -0.061250, -0.041875, -0.033125, -0.031250, -0.062500
#*# 	-0.020625, 0.012500, 0.005000, -0.022500, -0.030625, -0.061250, -0.068125, -0.049375, -0.023750, -0.015000, 0.001250, 0.003750
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = bicubic
#*# y_count = 12
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 12
#*# max_y = 304.97
#*# mesh_x_pps = 2
#*# max_x = 294.96
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-2.097500, -2.077500, -2.111250, -2.125000, -2.101250, -2.097500
#*# 	-2.161250, -2.063750, -2.085000, -2.093750, -2.105000, -2.170000
#*# 	-2.157500, -2.058750, -2.076250, -2.097500, -2.088750, -2.161250
#*# 	-2.147500, -2.031250, -2.040000, -2.051250, -2.027500, -2.101250
#*# 	-2.175000, -2.053750, -2.033750, -2.008750, -2.017500, -2.138750
#*# 	-2.146250, -2.063750, -2.043750, -2.000000, -1.983750, -2.071250
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = bicubic
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 6
#*# max_y = 300.0
#*# mesh_x_pps = 2
#*# max_x = 295.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 62.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 44.4
